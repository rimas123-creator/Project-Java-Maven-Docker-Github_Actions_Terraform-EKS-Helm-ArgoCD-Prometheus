name: Terraform EKS

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select Terraform Action'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy
      workspace:
        description: 'Terraform Workspace (dev, staging, prod)'
        required: true
        default: 'dev'
      environment:
        description: 'Deployment Environment'
        required: true
        default: 'production'
        type: choice
        options:
          - development
          - staging
          - production

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    env:
      AWS_REGION: ${{ vars.AWS_REGION }}  
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} 
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10.3"

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Select Workspace
        run: |
          terraform workspace select ${{ github.event.inputs.workspace }} || terraform workspace new ${{ github.event.inputs.workspace }}
        working-directory: terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: terraform


      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'plan' }}
        run: terraform plan -var-file="${{ github.event.inputs.workspace }}.tfvars
        working-directory: terraform

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        run: terraform apply -auto-approve -var-file="${{ github.event.inputs.workspace }}.tfvars
        working-directory: terraform

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: terraform destroy -auto-approve -var-file="${{ github.event.inputs.workspace }}.tfvars
        working-directory: terraform